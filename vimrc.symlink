set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'tpope/vim-sensible'
Plugin 'rstacruz/vim-opinion'
Plugin 'wincent/command-t'
Plugin 'scrooloose/nerdtree'
Plugin 'airblade/vim-gitgutter'
Plugin 'rust-lang/rust.vim'
Plugin 'bling/vim-airline'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'PotatoesMaster/i3-vim-syntax'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'tpope/vim-surround'
Plugin 'dhruvasagar/vim-table-mode'

call vundle#end()
filetype plugin indent on

"
" settings for ultisnips
" https://github.com/SirVer/ultisnips
"
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-x>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
" if I want :UltiSnipsEdit to split my window
let g:UltiSnipsEditSplit="vertical"

"
" my custom settings
"
"

set autoindent
set encoding=utf-8
set mouse=a
set backspace=indent,eol,start
set spelllang=en_us
" toggle spellcheck with <F7> in Normal mode
nnoremap <F7> :set spell!<CR>
" toggle auto indenting for code paste
set pastetoggle=<F2>

"
" Folding
"
set foldmethod=syntax        "fdm: fold by the indentation by default
set foldnestmax=10           "fdn: deepest fold is 10 levels
set nofoldenable             "nofen: don't fold by default
set foldlevel=1

"
" Search
"
set hlsearch

"
" Tabs
"
set tabstop=4                "ts: number of spaces that a tab renders as
set shiftwidth=4             "sw: number of spaces to use for autoindent
set softtabstop=4            "sts: number of spaces that tabs insert
set smarttab                 "sta: helps with backspacing because of expandtab
set expandtab                "et: uses spaces instead of tab characters

"
" HUD and status info
"
set number                   "nu: numbers lines
set numberwidth=3            "nuw: width of number column
set cmdheight=1              "ch: make a little more room for error messages
set scrolloff=4              "so: places a cople lines between the current line and the screen edge
set sidescrolloff=2          "siso: places a couple lines between the current column and the screen edge
set laststatus=2             "ls: makes the status bar always visible
set ttyfast                  "tf: improves redrawing for newer computers
set lazyredraw               "lz: will not redraw the screen while running macros

if has('linebreak')
  try
    set breakindent      "bri: visually indent wrapped lines
    let showbreak='â†³'
  catch /E518:/
    " unknown option: break indent
  endtry
endif

" lead with ,
let mapleader = ","

" toggle nerdtree with ,e
:nmap ,e :NERDTreeToggle<CR>

" ,s will strip whitespaces
function! StripWhitespace ()
  exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>

